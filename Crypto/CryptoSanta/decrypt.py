from Crypto.Util.number import *
from math import gcd
n = 4247245608945068947379114678430247108569828078460045707025740985323832355227169381838923404691234526142102358553457928186330642490676610827938918022731519884588653052742391996949022428421020125599610544376261531609722650823695304694604774412936658622365008155098853623717380846680087689422408635908170060514217723702707045297545107044991937756959456365662609026846091757973468881525926284654952153191761061578125070020449096179160033837495293933806390949309638630725491184160531024388919599937636215569679684365561802993357629020487575530124304647388454446943597625660335564499621789496754053973014398617688138616587884872913977802583570750203428400000979105462199798409324074337983438439384360521139530400401307867572285975829025463767409333225963828647658870387271115832968824172390350952001776506765179828706786857215321464040087845998927819630266036759437045718121032524998774229724222512467640848802429243823614635508619
e = 65537
c = 1771200280336538879854967313775195934159855250934662075762726925314209714160569233066867610804574006158846073119466403823788184698255209244941278923570831245876806297714039315757706528201329482088820886154339828844288722437020037076142160975525326914117822259783044004632688395043595622334959078897217111117257760309053241808638593249758716663546466267069136331619032996109038689122209728943292644583766705289164130439396954014773046874180300018338748616790404136922613090308890216960169892701955050265161408039845863673513656338282755021952025707099800506549921744544637672170473629571293118988085739661958001615585955821222725415413407719943324136224789279764506739107372081873510199888507301533147329039024094434264257820407731210589479659547688173690278263046782525022874413087488681336670848727705870285172070994221389377833032082784286270055672534846548659628856163851144840557792874134890339243682145258899304524062880
p = 2345821898837971489462986858566862073298212944053117857510677535593634513527866321207661804304476461305996310511123178974939858665125275494985662981127625173443127055361624136215496701261280614246897663465274478221887628463960792333738264614102358184590996051469326891227013617720877577754070385931534417666945235174535544300678610615151594739568087944955943888908739423219576117370251860277822221274907339756794103121843473684483578860427727798729711325430126393
q = 1810557575171835709137828891730043130489170212648060757460101985367013086645629091829883558639395506801277787373453667936340575258815714889475245637928054852294578011133778401372440342532402198305222554774053029427896197779542041818322825063650320534440211692606824151514355942162245928753501796099790169156755378699292424021738954891974899314742700247167304930209041301952818994224558220603514714097684651588266575747789963648042083552143663207063481113941626083

def lcm(x, y):
    return (x * y) // gcd(x, y)


def ex_euclid(x, y):
    c0, c1 = x, y
    a0, a1 = 1, 0
    b0, b1 = 0, 1

    while c1 != 0:
        m = c0 % c1
        q = c0 // c1

        c0, c1 = c1, m
        a0, a1 = a1, (a0 - q * a1)
        b0, b1 = b1, (b0 - q * b1)

    return a0, b0


t = lcm(p - 1, q - 1)
a, b = ex_euclid(e, t)
d = a % t

m = pow(c, d, n)

print(long_to_bytes(m))